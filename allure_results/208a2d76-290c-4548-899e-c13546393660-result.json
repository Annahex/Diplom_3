{"name": "Проверка открытия главной страницы", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f868623963094ce438f5eaeb591d7eb7\")>, random_email = 'phenry@example.com', random_password = '_Ba40MLqv2'\n\n    @pytest.fixture()\n    def driver_registered(driver, random_email, random_password):\n        driver.get(REGISTER_URL)\n        WebDriverWait(driver, 3).until(\n            expected_conditions.visibility_of_element_located((By.XPATH, ANY_INPUT_LOCATOR)))\n        for input_element in driver.find_elements(By.XPATH, EMAIL_OR_NAME_LOCATOR):\n            input_element.send_keys(random_email)\n        driver.find_element(By.XPATH, PASSWORD_LOCATOR).send_keys(random_password)\n        WebDriverWait(driver, 3).until(\n            expected_conditions.visibility_of_element_located((By.XPATH, ANY_INPUT_LOCATOR)))\n        driver.find_element(By.XPATH, REGISTER_BUTTON_LOCATOR).click()\n>       WebDriverWait(driver, 3).until(\n            expected_conditions.url_to_be(LOGIN_URL))\n\nconftest.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f868623963094ce438f5eaeb591d7eb7\")>, method = <function url_to_be.<locals>._predicate at 0x7f5424887640>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1732750470335, "stop": 1732750470335, "uuid": "57a9628b-2f6e-40c3-84fa-cddc3dd2a55b", "historyId": "9a758e1158d1d3a933015a57715c8ec5", "testCaseId": "44c73ed25cb94b43d240cc09d91f3dcc", "fullName": "tests.test_profile_page.TestProfilePage#test_open_profile_from_header", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_profile_page"}, {"name": "subSuite", "value": "TestProfilePage"}, {"name": "host", "value": "home"}, {"name": "thread", "value": "66427-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_profile_page"}]}